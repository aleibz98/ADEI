res.pca$var$cor
# Chunk 10
barplot(res.pca$eig[,1],main="Eigenvalues",names.arg=paste("dim",1:nrow(res.pca$eig)))
# Chunk 11
head(round(cbind(res.pca$ind$coord[,1:2],res.pca$ind$cos2[,1:2],res.pca$ind$contrib[,1:2]),2))
# Chunk 12
inds <- res.pca$ind$coord
inds <- as.data.frame(inds)
rang.dim1<-inds[order(inds$Dim.1, decreasing = TRUE),]
head(rang.dim1)
# Chunk 13
rang.dim2<-inds[order(inds$Dim.2, decreasing = TRUE),]
head(rang.dim2)
# Chunk 14
df[which(row.names(df) %in% row.names(res.pca$ind$coord[row.names(rang.dim1)[1:10],])),]
# Chunk 15
round(cbind(res.pca$var$cos2[,1:2],res.pca$var$contrib[,1:2]),2)
# Chunk 16
res.des<-dimdesc(res.pca)
res.des$Dim.1$quanti
# Chunk 17
plot.PCA(res.pca,choix=c("var"),axes=c(3,4))
# Chunk 18
library("corrplot")
corrplot(res.pca$var$cos2, is.corr=FALSE)
# Chunk 19
ll <- which( df$mout == "YesMOut")
res.pca<-PCA(df[,c(vars_res, vars_num)],quali.sup=c(2),quanti.sup= c(1), ind.sup = ll, ncp=2)
plot(res.pca, choix="ind",invisible=c("ind","ind.sup"), cex=0.7, graph.type = "classic")
# Chunk 20
res.pca$quali.sup$coord
# Chunk 21
res.des$Dim.1$quali
# Chunk 22
res.des$Dim.2$quali
# Chunk 23
res.pca<-PCA(df[,c(vars_res, vars_cat, vars_num)],quali.sup=c(2:13),quanti.sup= c(1), ind.sup = ll, ncp = 2)
# Chunk 24
res.hcpc<-HCPC(res.pca,order=TRUE, nb.clust=-1)
# Chunk 25
length(which(res.hcpc$call$t$res$eig[,1] > mean(res.hcpc$call$t$res$eig[,1])))
# Chunk 26
res.hcpc$desc.axes
# Chunk 27
summary(res.hcpc$data.clust$clust)
# Chunk 28
res.hcpc$desc.var$test.chi2
# Chunk 29
#res.hcpc$desc.var$category
# Chunk 30
res.hcpc$desc.var$quanti.var
# Chunk 31
res.hcpc$desc.var$quanti
# Chunk 32
res.hcpc$desc.ind$para
# Chunk 33
summary(df[c("30871","24055","28264","48543","34122"),])
# Chunk 34
res.hcpc$desc.ind$dist
# Chunk 35
summary(df[c("31816","17634","17208","48339","24771"),])
# Chunk 36
res.pca<-PCA(df[,c(vars_res, vars_cat, vars_num)],quali.sup=c(2:13),quanti.sup= c(1), ind.sup = ll, ncp=2)
ppcc <- res.pca$ind$coord
kc <- kmeans (dist(ppcc),3)
df[-ll, "claKMPCA"] <- kc$cluster
# Chunk 37
summary(kc)
# Chunk 38
kc$betweenss/kc$totss
# Chunk 39
kc$tot.withinss/kc$totss
# Chunk 40
fviz_cluster(kc, data=ppcc)
# Chunk 41
plot.HCPC(res.hcpc, choice="map")
# Chunk 42
df$claKMPCA <- factor(df$claKMPCA)
km.catdes<-catdes(df[,c("claKMPCA",vars_num,vars_cat, "price")],1)
km.catdes$quanti
# Chunk 43
tt<-table(df[,c("f.price","f.miles")])
res.ca<-CA(tt)
chisq.test(tt)
# Chunk 44
fviz_eig(res.ca)
# Chunk 45
plot( res.ca, cex=0.8, graph.type = "classic" )
lines( res.ca$row$coord[,1], res.ca$row$coord[,2], col="blue", lwd = 2 )
lines( res.ca$col$coord[,1], res.ca$col$coord[,2], col="red", lwd = 2 )
# Chunk 46
fviz_ca_biplot(res.ca,repel=TRUE)+theme_bw()
# Chunk 47
tt<-table(df[,c("f.price","f.age")])
res.ca<-CA(tt)
# Chunk 48
plot( res.ca, cex=0.8, graph.type = "classic" )
lines( res.ca$row$coord[,1], res.ca$row$coord[,2], col="blue", lwd = 2 )
lines( res.ca$col$coord[,1], res.ca$col$coord[,2], col="red", lwd = 2 )
# Chunk 49
tt<-table(df[,c("f.price","manufacturer")])
res.ca<-CA(tt)
# Chunk 50
fviz_ca_biplot(res.ca,repel=TRUE)+theme_bw()
# Chunk 51
llvout<-which(df$mout=="YesMOut");length(llvout)
res.mca<-MCA(df[,c("f.price","Audi",vars_cat[c(3:4,6,8:11)],"price", vars_num) ], quali.sup=c(1,2),quanti.sup=10:14 , ind.sup=llvout) # Quitamos engineSize porque si no no funciona y f.price para que no salga duplicada
# Chunk 52
length(which(res.mca$eig[,1] > mean(res.mca$eig[,1])))
# Chunk 53
res.mca$eig[1:7,]
# Chunk 54
fviz_eig(res.mca)
# Chunk 55
head(res.mca$var$contrib)
# Chunk 56
head(res.mca$var$cos2)
fviz_cos2(res.mca, choice = "var", axes = 1:2, )+theme_bw()
?fviz_cos2
fviz_cos2(res.mca, choice = "var", axes = 1:2, xtickslab.rt = "45")+theme_bw()
fviz_cos2(res.mca, choice = "var", axes = 1:2, xtickslab.rt = 45)+theme_bw()
fviz_cos2(res.mca, choice = "var", axes = 1:2,)+theme_bw()
fviz_cos2(res.mca, choice = "var", axes = 1:2)+theme_bw()
xtickslab.rt = 45
fviz_cos2(res.mca, choice = "var", axes = 1:2, xtickslab.rt = 45)+theme_bw()
fviz_cos2(res.mca, choice = "var", axes = 1:2, xtickslab.rt = "45")+theme_bw()
fviz_cos2(res.mca, choice = "var", axes = 1:2, labels("None"))+theme_bw()
fviz_cos2(res.mca, choice = "var", axes = 1:2)+theme_bw()+theme(axis.text.x = element_text(angle=45))
fviz_cos2(res.mca, choice = "var", axes = 1:2)+theme_bw()+theme(axis.text.x = element_text(angle=90))
res.mca$quanti
fviz_eig(res.mca)
head(res.mca$var$contrib)
head(res.mca$var$cos2)
head(res.mca$var$contrib)
head(res.mca$var$contrib)
head(res.mca$var$cos2)
head(res.mca$var$cos2)
llvout<-which(df$mout=="YesMOut");length(llvout)
res.mca<-MCA(df[,c("f.price","Audi",vars_cat[c(3:4,6,8:11)],"price", vars_num) ], quali.sup=c(1,2),quanti.sup=10:14 , ind.sup=llvout) # Quitamos engineSize porque si no no funciona y f.price para que no salga duplicada
length(which(res.mca$eig[,1] > mean(res.mca$eig[,1])))
res.mca$eig[1:7,]
head(res.mca$var$cos2)
res.mca$var$cos2
fviz_cos2(res.mca, choice = "var", axes = 1:2)+theme_bw()+theme(axis.text.x = element_text(angle=90))
res.mca$var$eta2
fviz_mca_var(res.mca, col.var="contrib",repel=TRUE,labelsize = 2)+
scale_color_gradient2(low="green", mid="blue",
high="red", midpoint=0.75)+theme_bw()
res.mca$quanti
res.mca<-MCA(df[,c("f.price","Audi",vars_cat[c(3:4,6,8:11)],"price",vars_num) ],quali.sup=c(1,2),quanti.sup=c(10:14) , ind.sup=llvout, ncp=7)
res.hcmc<-HCPC(res.mca,nb.clust=-1,order=TRUE)
length(which(res.hcmc$call$t$res$eig[,1] > mean(res.hcmc$call$t$res$eig[,1])))
plot(res.hcmc$call$t$inert.gain[1:20])
res.hcmc<-HCPC(res.mca,nb.clust=7,order=TRUE)
(res.hcmc$call$t$within[1]-res.hcmc$call$t$within[1:7])/res.hcmc$call$t$within[1]
df$claHCMC<-7
df[row.names(res.hcmc$data.clust),"claHCMC"]<-res.hcmc$data.clust$clust
df$claHCMC<-factor(df$claHCMC)
levels( df$claHCMC ) <- paste0( "f.claHCMC-",levels( df$claHCMC ))
table(df$claHCMC)
res.hcmc$desc.var$test.chi2
res.hcmc$desc.var$test.chi2
res.hcmc$desc.var$quanti.var
res.hcmc$desc.var$quanti
res.hcmc$desc.axes$quanti.var
res.hcmc$desc.axes$quanti
df[-ll, "claKMMCA"] <- kc$cluster
ppcc <- res.mca$ind$coord[,1:7];
kc<-kmeans(dist(ppcc),7)
kc$betweenss/kc$totss
kc$tot.withinss/kc$totss
fviz_cluster(kc, data=ppcc)
df[-ll, "claKMMCA"] <- kc$cluster
df$claKMMCA <- factor(df$claKMMCA)
km.catdes<-catdes(df[,c("claKMMCA",vars_num,vars_cat, "price")],1)
km.catdes$quanti
km.catdes$quanti[1]
km.catdes$quanti[2]
km.catdes$quanti[3]
km.catdes$quanti[7]
clarke(m2,m5)
# Chunk 1: setup
#ConfiguraciÃ³n del environment
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(comment = NA)
require("knitr")
opts_knit$set(root.dir = "/Users/aleibz/ADEI/ADEI/ADEI/")
# Chunk 2
#Limpiamos el environment.
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
# Chunk 3
#Importamos las librerias y paquetes necesarios.
options(contrasts=c("contr.treatment","contr.treatment"))
requiredPackages <- c("effects","FactoMineR","car", "factoextra","RColorBrewer","ggplot2","dplyr","ggmap","ggthemes","knitr", "missMDA","games")
package.check <- lapply(requiredPackages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
#verify they are loaded
search()
# Chunk 4
load("/Users/aleibz/ADEI/ADEI/ADEI/data_del1.RData")
# Chunk 5
vars_res<-c("price","Audi")
vars_dis<-c("model", "year", "transmission", "fuelType", "engineSize", "manufacturer", "f.price", "f.miles", "f.mpg", "f.tax", "f.age")
vars_con<-c("mileage", "tax", "mpg", "age")
c(vars_res, vars_dis,vars_con, "mout")
summary( df[ , c(vars_res, vars_dis, vars_con, "mout") ] )
# Chunk 6
vars_con
ll<-which(df$age==0);ll
df$age[ll]<-0.5
ll<-which(df$tax==0);ll
df$tax[ll]<-0.5
ll<-which(df$mpg==0);ll
df$mpg[ll]<-0.5
ll<-which(df$mileage==0);ll
df$mileage[ll]<-0.5
# Chunk 7
m1<-lm(price~mileage+tax+mpg+age,data=df)
summary(m1)
# Chunk 8
vif(m1)
# Chunk 9
par(mfrow=c(2,2));
plot(m1,id.n=0)
# Chunk 10
library(MASS)
# Chunk 11
par(mfrow=c(1,1))
boxcox(price~mileage+tax+mpg+age,data=df)
# Chunk 12
m2<-lm(log(price)~mileage+tax+mpg+age,data=df)
summary(m2)
# Chunk 13
vif(m2)
# Chunk 14
par(mfrow=c(2,2));
plot(m2,id.n=0);
par(mfrow=c(1,1))
# Chunk 15
residualPlots(m2,id=list(method=cooks.distance(m2),n=10))
# Chunk 16
marginalModelPlots(m2)
# Chunk 17
#boxTidwell(log(price)~mileage+tax+age+mpg,data=df[!df$mout=="YesMOut",], verbose=TRUE)
# Chunk 18
m3<-lm(log(price)~mileage+tax+age, data=df)
boxTidwell(log(price)~mileage+tax+age, data=df[!df$mout=="YesMOut",], max.iter=100)
# Chunk 19
m4<-lm(log(price)~sqrt(mileage)+poly(tax,4)+age, data=df)
summary(m4)
#boxTidwell(log(price)~sqrt(mileage)+poly(tax,4)+age, data=df[!df$mout=="YesMOut",], verbose=TRUE)
# Chunk 20
library(games)
clarke(m2, m4)
# Chunk 21
m5<-update(m4,~.+mpg)
summary(m5)
# Chunk 22
anova(m4,m5)
# Chunk 23
clarke(m2,m5)
# Chunk 24
par(mfrow=c(2,2));
plot(m2,id.n=0);
par(mfrow=c(1,1))
# Chunk 25
residualPlots(m2,id=list(method=cooks.distance(m2),n=10))
# Chunk 26
marginalModelPlots(m2)
# Chunk 27
m6<-update(m2, data=df[!df$mout=="YesMOut",])
summary(m6)
# Chunk 28
Anova(m6)
# Chunk 29
vif(m6)
# Chunk 30
par(mfrow=c(2,2))
plot(m6,id.n=0)
# Chunk 31
par(mfrow=c(2,3))
residualPlots(m6,id=list(method=cooks.distance(m6),n=10))
# Chunk 32
df2 <- df[!df$mout=="YesMOut",]
df2 <- df2[row.names(df2)!="19848",]
df2 <- df2[row.names(df2)!="40774",]
df2 <- df2[row.names(df2)!="20688",]
# Chunk 33
m7<-update(m6,data=df2)
summary(m7)
# Chunk 34
par(mfrow=c(2,2))
plot(m7,id.n=0)
# Chunk 35
par(mfrow=c(2,3))
residualPlots(m7,id=list(method=cooks.distance(m7),n=10))
# Chunk 36
library(lmtest)
bptest(m7)
# Chunk 37
par(mfrow=c(1,3))
Boxplot(abs(rstudent(m7)),id=list(labels=row.names(df2)))
Boxplot(abs(hatvalues(m7)),id=list(labels=row.names(df2)))
Boxplot(cooks.distance(m7),id=list(labels=row.names(df2)))
# Chunk 38
stu_out <- which(abs(rstudent(m7))>3.7);
cook_out <- which(abs(cooks.distance(m7))>0.0065);
hat_out <- which(abs(hatvalues(m7))>0.007);
outs<-unique(c(stu_out,cook_out,hat_out));outs
# Chunk 39
par(mfrow=c(1,1));
outs2 <- influencePlot(m7, id=list(n=10));
outs2 <- labels(outs2)[[1]];
outs2 <- as.numeric(outs2);
outs3 <- unique(c(outs,outs2));outs3
# Chunk 40
m8 <- update(m7, data=df2[-outs3,])
summary(m8)
# Chunk 41
m10<- update(m8, ~.+fuelType)
summary(m10)
# Chunk 42
vif(m10)
# Chunk 43
Anova(m10)
# Chunk 44
par(mfrow=c(2,2))
plot(m10,id.n=0)
# Chunk 45
m11 <- update(m10, ~.+transmission)
summary(m11)
# Chunk 46
anova(m10,m11)
# Chunk 47
par(mfrow=c(2,2))
plot(m11)
# Chunk 48
vif(m11)
# Chunk 49
par(mfrow=c(1,1))
residualPlots(m11,id=list(method=cooks.distance(m11),n=10))
# Chunk 50
m13 <- update(m11, ~.+transmission*fuelType)
summary(m13)
# Chunk 51
anova(m11,m13)
# Chunk 52
m14 <- update(m13, ~.+age*transmission)
anova(m13,m14)
# Chunk 53
par(mfrow=c(2,2))
plot(m14, id.n=0)
# Chunk 54
marginalModelPlots(m14)
# Chunk 55
library(effects);
plot(allEffects(m14))
# Chunk 56
#vif(m14)
Anova(m14);
# Chunk 57
m15 <- step( m14, k=log(nrow(df2)))
#vif(m15)
# Chunk 58
anova(m15,m14)
# Chunk 59
alias(m14)
# Chunk 60
summary(m14)
# Chunk 61
llwork <- sample(1:nrow(df2),round(0.80*nrow(df2),0))
df_train <- df2[llwork,]
df_test <-df2[-llwork,]
# Chunk 62
m20<-glm(Audi~mileage+tax+mpg+age,family="binomial",data=df_train)
summary(m20)
# Chunk 63
vif(m20)
# Chunk 64
m21 <- glm(Audi~ mpg + age,family="binomial",data=df_train)
anova(m21,m20,test = "LR");
# Chunk 65
m22 <- glm(Audi~ poly(mpg,2) + poly(age,2), family="binomial", data=df_train)
anova(m21,m22, test = "LR")
# Chunk 66
summary(m21)
# Chunk 67
df_train$engineSize_f <- as.integer(df_train$engineSize)
par(mfrow=c(1,1))
hist(df_train$engineSize_f)
quantile(df_train$engineSize_f, c(0.3333333,0.6666666,1))
df_train$engineSize_f <- factor(cut(df_train$engineSize_f, breaks = c(0,8,9,20)))
df_test$engineSize_f <- as.integer(df_test$engineSize)
df_test$engineSize_f <- factor(cut(df_test$engineSize_f, breaks = c(0,8,9,20)))
table(df_train$engineSize_f)
# Chunk 68
m24 <- update(m21, ~.+fuelType+transmission)
summary(m24)
vif(m24)
# Chunk 69
Anova(m24, test="LR")
# Chunk 70
anova(m21,m24, test="LR")
# Chunk 71
m25 <- update(m24, ~.+engineSize_f)
summary(m25)
vif(m25)
# Chunk 72
Anova(m25, test="LR")
#anova(m24,m25, test="LR")    #No se pueden hacer porque han aparecido missings en el dataset cuando hemos aÃ±adido el factor de enginesize
#AIC(m24,m25)
# Chunk 73
residualPlots(m25,id=list(method=cooks.distance(m25),n=10))
marginalModelPlots(m25)
avPlots(m25,id=list(method=hatvalues(m25),n=5))
crPlots(m25,id=list(method=cooks.distance(m25),n=5))
# library(effects)
plot(allEffects(m25))
# Chunk 74
m26 <- update(m25, ~.*(fuelType+transmission)^2,data=df_train)
#summary(m26) Omitimos debido a la longitud de la salida
#vif(m26)
# Chunk 75
Anova(m26, test="LR")
# Chunk 76
m27 <- step( m26 )
#vif(m27)
summary(m27)
# Chunk 77
Anova(m27, test="LR")
# Chunk 78
m28 <- update(m27, ~.-fuelType:transmission - age:fuelType)
#vif(m28) -> Salta error
# Chunk 79
m29 <- step(m28)
vif(m29)
anova(m29,m28, test="LR")
# Chunk 80
summary(m29)
# Chunk 81
vif(m29)
Anova(m29)
# Chunk 82
par(mfrow=c(1,3))
Boxplot(hatvalues(m29),id=c(labels=row.names(df_train)))
Boxplot(cooks.distance(m29),id=c(labels=row.names(df_train)))
Boxplot(abs(rstudent(m29)),id=c(labels=row.names(df_train)))
# Chunk 83
stu_out <- which(abs(rstudent(m29))>2.3);
cook_out <- which(abs(cooks.distance(m29))>0.0035);
hat_out <- which(abs(hatvalues(m29))>0.07);
outs<-unique(c(stu_out,cook_out,hat_out));outs
# Chunk 84
par(mfrow=c(1,1));
outs2 <- influencePlot(m29, id=c(labels=row.names(df_train)));
outs2 <- labels(outs2)[[1]];
outs2 <- as.numeric(outs2);
outs3 <- unique(c(outs,outs2));outs3
# Chunk 85
m30 <- update(m29,data=df_train[-outs3,])
summary(m30)
# Chunk 86
vif(m30)
Anova(m30, test="LR")
# Chunk 87
marginalModelPlots(m30)
# Chunk 88
m0<-glm(Audi ~ 1, family="binomial", data=df_train[-outs3,])
# Chunk 89
Anova(m30)
1-pchisq(m30$deviance, m30$df.residual)
# Chunk 90
X2m30<-sum((resid(m30,"pearson")^2))
1-pchisq( X2m30, m30$df.res)
# Chunk 91
library(DescTools)
PseudoR2(m30, which='all')
1-pchisq(m30$deviance, m30$df.residual)
X2m30<-sum((resid(m30,"pearson")^2))
1-pchisq( X2m30, m30$df.res)
PseudoR2(m30, which='all')
ll <- which( is.finite(df_test$engineSize_f) )
pred_test <- predict(m30, newdata=df_test[ll,], type="response")
ht <- hoslem.test(as.numeric(df_test$Audi[ll])-1,  pred_test)
ht
library(ResourceSelection)
ll <- which( is.finite(df_test$engineSize_f) )
pred_test <- predict(m30, newdata=df_test[ll,], type="response")
ht <- hoslem.test(as.numeric(df_test$Audi[ll])-1,  pred_test)
ht
audi.est <- ifelse(pred_test<0.4,0,1)
tt<-table(audi.est,df_test$Audi[ll]);tt;
100*sum(diag(tt))/sum(tt)
vif(m2)
boxcox(log(price)~mileage+tax+mpg+age,data=df)
boxcox(log(price)^2~mileage+tax+mpg+age,data=df)
boxTidwell(log(price)^2~mileage+tax+age+mpg,data=df[!df$mout=="YesMOut",], verbose=TRUE)
summary(m2)
m2<-lm(log(price)^2~mileage+tax+mpg+age,data=df)
summary(m2)
vif(m2)
residualPlots(m2,id=list(method=cooks.distance(m2),n=10))
marginalModelPlots(m2)
boxTidwell(log(price)^2~mileage+tax+age+mpg,data=df[!df$mout=="YesMOut",], verbose=TRUE)
boxTidwell(log(price)^2~mileage+age+mpg,data=df[!df$mout=="YesMOut",], verbose=TRUE)
